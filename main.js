!function(){"use strict";class t{constructor(t,e){let{data:i,handleImageClick:s}=t;this._name=i.name,this._link=i.link,this._currentCard=e,this._handleImageClick=s}generateCard(){return this._getTemplate(),this._cardLikeButton=this._cardElement.querySelector(".card__like-button"),this._cardDeleteButton=this._cardElement.querySelector("#card-delete-button"),this.cardTitleElement=this._cardElement.querySelector("#card-title"),this.cardImageElement=this._cardElement.querySelector("#card-image"),this.cardTitleElement.textContent=this._name,this.cardImageElement.src=this._link,this.cardImageElement.alt=this._name,this._setEventListeners(),this._cardElement}_getTemplate(){this._cardElement=document.querySelector(this._currentCard).content.firstElementChild.cloneNode(!0)}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>{this._handleLikeButton()})),this._cardDeleteButton.addEventListener("click",(()=>{this._handleDeleteButton()})),this.cardImageElement.addEventListener("click",(()=>{this._handleImageClick({link:this._link,name:this._name})}))}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}_handleLikeButton(){this._cardLikeButton.classList.toggle("card__like-button-active")}}class e{constructor(t,e){this._settings=t,this._formSelector=t.formSelector,this._formElement=e,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)]}enableValidation(){this._formElement.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}_setEventListeners(){this.toggleButtonState(),this._inputElements.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this.toggleButtonState()}))}))}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_showInputError(t){this._errorMessage=document.querySelector(`#${t.id}-error`),t.classList.add(this._inputErrorClass),this._errorMessage.textContent=t.validationMessage,this._errorMessage.classList.add(this._errorClass)}_hideInputError(t){this._errorMessage=document.querySelector(`#${t.id}-error`),t.classList.remove(this._inputErrorClass),this._errorMessage.textContent="",this._errorMessage.classList.remove(this._errorClass)}toggleButtonState(){if(this._hasInvalidInput())return this._disableButton();this._enableButton()}_hasInvalidInput(){return!this._inputElements.every((t=>t.validity.valid))}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}resetValidation(){this.toggleButtonState(),this._inputElements.forEach((t=>{this._hideInputError(t)}))}}class i{constructor(t){this._popupElement=document.querySelector(t),this._popupCloseButton=this._popupElement.querySelector(".modal__close-button")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=t=>{"Escape"===t.key&&this.close()};_handleClickOut(t){t.target.classList.contains("modal")&&this.close()}setEventListeners(){this._popupElement.addEventListener("click",(t=>{this._handleClickOut(t)})),this._popupCloseButton.addEventListener("click",(()=>{this.close()}))}}class s extends i{constructor(t,e){super(e),this._handleFormSubmit=t}_getInputValues(){return this._formInputs=Array.from(this._popupElement.querySelectorAll(".modal__form-input")),this.formValues={},this._formInputs.forEach((t=>{this.formValues[t.name]=t.value})),this.formValues}setEventListeners(){this._popupElement.addEventListener("submit",(t=>{this._getInputValues(),this._handleFormSubmit(t),this.resetForm()})),super.setEventListeners()}resetForm(){this._form=this._popupElement.querySelector(".modal__form"),this._form.reset()}}const r=document.querySelector("#profile-edit-button"),n=(document.forms["profile-edit-form"],document.querySelector(".profile__add-button")),o=(document.forms["add-card-form"],{inputSelector:".modal__form-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"}),a={cardSection:"#cards-list",cardTemplate:"#cards-template",previewModal:"#card-image-modal",addCardForm:"#add-card-modal",cardTitleInput:"#add-card-modal-title",cardLinkInput:"#add-card-modal-link",profileEditForm:"#profile-edit-modal",profileDescription:"#profile-description",profileTitle:"#profile-title",formSelector:".modal__form",editFormTitle:"#edit-profile-modal-title",editFormDetails:"#edit-profile-modal-description",formsSelector:".modal__form"},l=new class{constructor(t,e){this._name=document.querySelector(t),this._description=document.querySelector(e)}getUserInfo(){return this._userInfo={name:this._name.textContent,description:this._description.textContent},this._userInfo}setUserInfo(t){let{name:e,description:i}=t;this._newTitle=e,this._newDescription=i,this._name.textContent=this._newTitle,this._description.textContent=this._newDescription}}(a.profileTitle,a.profileDescription),d=new class extends i{constructor(t){super(t),this._image=this._popupElement.querySelector("#modal-image"),this._description=this._popupElement.querySelector("#card-image-modal-description")}open(t){this._image.src=t.link,this._image.alt=t.name,this._description.textContent=t.name,super.open()}}(a.previewModal),c=new s((function(t){t.preventDefault();const{title:e,link:i}=c.formValues,s=_({name:e,link:i});m.addItem(s),c.resetForm(),h["add-card-form"].resetValidation(),c.close()}),a.addCardForm),m=new class{constructor(t,e){this._renderer=t,this._classContainer=document.querySelector(e)}renderItems(t){t.forEach((t=>{this._element=this._renderer(t),this.addItem(this._element)}))}addItem(t){this._classContainer.prepend(t)}}(_,a.cardSection),u=new s((function(t){t.preventDefault();const{name:e,description:i}=u.formValues;(function(t){let{name:e,description:i}=t;l.setUserInfo({name:e,description:i})})(u.formValues),u.close(),h["profile-edit-form"].resetValidation()}),a.profileEditForm),h={};function _(e){return new t({data:e,handleImageClick:p},"#cards-template").generateCard()}function p(t){d.open(t)}m.renderItems([{name:"Dolomites",link:"https://images.unsplash.com/photo-1683899266164-219e1ebdf029?q=80&w=1964&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"},{name:"Hallstatt",link:"https://images.unsplash.com/photo-1633886648986-ec392f72d900?q=80&w=1854&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"},{name:"Bryce Canyon",link:"https://images.unsplash.com/photo-1631028771413-1389145e26f7?q=80&w=1887&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"},{name:"Biertan",link:"https://images.unsplash.com/photo-1600120834153-6700a1a3399b?q=80&w=1854&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"},{name:"Seceda",link:"https://images.unsplash.com/photo-1670443437765-f0239aebf4b0?q=80&w=1974&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"},{name:"Santorini",link:"https://images.unsplash.com/photo-1613395877344-13d4a8e0d49e?q=80&w=1935&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"}]),(t=>{Array.from(document.querySelectorAll(t.formsSelector)).forEach((t=>{const i=new e(o,t),s=t.getAttribute("name");h[s]=i,i.enableValidation()}))})(a),u.setEventListeners(),c.setEventListeners(),d.setEventListeners(),r.addEventListener("click",(()=>{u.open(),function(t,e){const i=document.querySelector(t),s=document.querySelector(e),{description:r,name:n}=l.getUserInfo();i.value=n.trim(),s.value=r.trim()}(a.editFormTitle,a.editFormDetails)})),n.addEventListener("click",(()=>{c.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,