!function(){"use strict";class t{constructor(t,e,i,s,r){let{data:n,handleImageClick:o}=t;this._name=n.name,this._link=n.link,this._id=n._id,this._isLiked=n.isLiked,this._currentCard=e,this._handleImageClick=o,this._deleteCardConfirm=i,this._cardLikeFunction=s,this._cardUnlikeFunction=r}generateCard(){return this._getTemplate(),this._cardLikeButton=this._cardElement.querySelector(".card__like-button"),this._cardDeleteButton=this._cardElement.querySelector("#card-delete-button"),this.cardTitleElement=this._cardElement.querySelector("#card-title"),this.cardImageElement=this._cardElement.querySelector("#card-image"),this.cardTitleElement.textContent=this._name,this.cardImageElement.src=this._link,this.cardImageElement.alt=this._name,this._setEventListeners(),this._isLiked?this._cardLikeButton.classList.add("card__like-button-active"):this._cardLikeButton.classList.remove("card__like-button-active"),this._cardElement}_getTemplate(){this._cardElement=document.querySelector(this._currentCard).content.firstElementChild.cloneNode(!0)}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>{this._handleLikeButton()})),this._cardDeleteButton.addEventListener("click",(()=>{this._deleteCardConfirm(this._id,this._cardElement)})),this.cardImageElement.addEventListener("click",(()=>{this._handleImageClick({link:this._link,name:this._name})}))}_handleLikeButton(){this._isLiked?(this._cardLikeButton.classList.remove("card__like-button-active"),this._cardUnlikeFunction(this._id),this._isLiked=!1):(this._cardLikeButton.classList.add("card__like-button-active"),this._cardLikeFunction(this._id),this._isLiked=!0)}}class e{constructor(t,e){this._settings=t,this._formSelector=t.formSelector,this._formElement=e,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._inputElements=[...this._formElement.querySelectorAll(this._inputSelector)]}enableValidation(){this._formElement.addEventListener("submit",(t=>{t.preventDefault()})),this._setEventListeners()}_setEventListeners(){this.toggleButtonState(),this._inputElements.forEach((t=>{t.addEventListener("input",(()=>{this._checkInputValidity(t),this.toggleButtonState()}))}))}_checkInputValidity(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}_showInputError(t){this._errorMessage=document.querySelector(`#${t.id}-error`),t.classList.add(this._inputErrorClass),this._errorMessage.textContent=t.validationMessage,this._errorMessage.classList.add(this._errorClass)}_hideInputError(t){this._errorMessage=document.querySelector(`#${t.id}-error`),t.classList.remove(this._inputErrorClass),this._errorMessage.textContent="",this._errorMessage.classList.remove(this._errorClass)}toggleButtonState(){if(this._hasInvalidInput())return this._disableButton();this._enableButton()}_hasInvalidInput(){return!this._inputElements.every((t=>t.validity.valid))}_disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}resetValidation(){this.toggleButtonState(),this._inputElements.forEach((t=>{this._hideInputError(t)}))}}class i{constructor(t,e){this._popupElement=document.querySelector(t),this._popupCloseButton=this._popupElement.querySelector(".modal__close-button"),this._submitButton=document.querySelector(e)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=t=>{"Escape"===t.key&&this.close()};_handleClickOut(t){t.target.classList.contains("modal")&&this.close()}setProcessingMessage(t){console.log(this._submitButton),this._submitButton.textContent=t}removeProcessingMessage(t){this._submitButton.textContent=t}setEventListeners(){this._popupElement.addEventListener("click",(t=>{this._handleClickOut(t)})),this._popupCloseButton.addEventListener("click",(()=>{this.close()}))}}class s extends i{constructor(t,e,i){super(e,i),this._handleFormSubmit=t}_getInputValues(){return this._formInputs=Array.from(this._popupElement.querySelectorAll(".modal__form-input")),this.formValues={},this._formInputs.forEach((t=>{this.formValues[t.name]=t.value})),this.formValues}setEventListeners(t){this._popupElement.addEventListener("submit",(e=>{this._getInputValues(),this._handleFormSubmit(e),this.resetForm(),this.setProcessingMessage(t)})),super.setEventListeners()}resetForm(){this._form=this._popupElement.querySelector(".modal__form"),this._form.reset()}}class r{constructor(t){this._authorization="0863e235-ec04-4229-a6bf-890245ffa3f4"}uploadCard(t){let{name:e,link:i}=t;return fetch("https://around-api.en.tripleten-services.com/v1/cards",{method:"POST",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e,link:i})}).then((t=>t.ok?t.json():Promise.reject(`Uh oh! Error: ${t.status}`)))}fetchCards(){return fetch("https://around-api.en.tripleten-services.com/v1/cards",{method:"GET",headers:{authorization:this._authorization,"Content-Type":"application/json"}}).then((t=>t.ok?t.json():Promise.reject(`Uh oh! Error: ${t.status}`)))}getUserInfo(){return fetch("https://around-api.en.tripleten-services.com/v1/users/me",{method:"GET",headers:{authorization:this._authorization,"Content-Type":"application/json"}}).then((t=>t.ok?t.json():Promise.reject(`Uh oh! Error: ${t.status}`)))}changeUserInfo(t){let{name:e,about:i}=t;return fetch("https://around-api.en.tripleten-services.com/v1/users/me",{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({name:e,about:i})}).then((t=>t.ok?t.json():Promise.reject(`Uh oh! Error: ${t.status}`)))}changeUserAvatar(t){return fetch("https://around-api.en.tripleten-services.com/v1/users/me/avatar",{method:"PATCH",headers:{authorization:this._authorization,"Content-Type":"application/json"},body:JSON.stringify({avatar:t})}).then((t=>t.ok?t.json():Promise.reject(`Uh oh! Error: ${t.status}`)))}deleteCard(t){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${t}`,{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":"application/json"}}).then((t=>t.ok?t.json():Promise.reject(`Uh oh! Error: ${t.status}`)))}cardLike(t){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${t}/likes`,{method:"PUT",headers:{authorization:this._authorization,"Content-Type":"application/json"}}).then((t=>t.ok?t.json():Promise.reject(`Uh oh! Error: ${t.status}`).then((t=>console.log(t)))))}cardUnlike(t){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${t}/likes`,{method:"DELETE",headers:{authorization:this._authorization,"Content-Type":"application/json"}}).then((t=>t.ok?t.json():Promise.reject(`Uh oh! Error: ${t.status}`).then((t=>console.log(t)))))}}const n=document.querySelector("#profile-edit-button"),o=(document.forms["profile-edit-form"],document.querySelector(".profile__add-button")),a=(document.forms["add-card-form"],document.querySelector(".profile__avatar")),d=document.querySelector(".avatar-edit-button"),l="Saving...",c={inputSelector:".modal__form-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible"},u={cardSection:"#cards-list",cardTemplate:"#cards-template",previewModal:"#card-image-modal",addCardForm:"#add-card-modal",cardTitleInput:"#add-card-modal-title",cardLinkInput:"#add-card-modal-link",profileEditForm:"#profile-edit-modal",profileDescription:"#profile-description",profileTitle:"#profile-title",formSelector:".modal__form",editFormTitle:"#edit-profile-modal-title",editFormDetails:"#edit-profile-modal-description",formsSelector:".modal__form",deleteCardModal:"#delete-confirmation-modal",deleteCardButton:"#delete-confirmation-button",cardLikeButton:"card-like-button",profileAvatarContainer:".profile__avatar-container",profileAvatarEdit:".avatar-edit-button",avatarImage:".profile__avatar",editAvatarModal:"#edit-avatar-modal",profileEditButton:"#edit-profile-modal-save-button",addCardButton:"#add-card-modal-button",deleteCardForm:"#delete-card-form",avatarEditSubmitButton:"#edit-avatar-modal-button"},h=new class{constructor(t,e,i,s,r){this._name=document.querySelector(t),this._description=document.querySelector(e),this._avatar=document.querySelector(i),this._avatarEditButton=document.querySelector(s),this._avatarImage=document.querySelector(r)}getUserInfo(){return this._userInfo={name:this._name.textContent,description:this._description.textContent},this._userInfo}setUserInfo(t){let{name:e,description:i}=t;this._newTitle=e,this._newDescription=i,this._name.textContent=this._newTitle,this._description.textContent=this._newDescription}setEventListeners(){this._avatar.addEventListener("mouseover",(()=>{this._avatarEditButton.classList.add("avatar-edit-button-visible"),this._avatarImage.classList.add("profile__avatar-shaded")})),this._avatar.addEventListener("mouseout",(()=>{this._avatarEditButton.classList.remove("avatar-edit-button-visible"),this._avatarImage.classList.remove("profile__avatar-shaded")}))}}(u.profileTitle,u.profileDescription,u.profileAvatarContainer,u.profileAvatarEdit,u.avatarImage),m=new class extends i{constructor(t){super(t),this._image=this._popupElement.querySelector("#modal-image"),this._description=this._popupElement.querySelector("#card-image-modal-description")}open(t){this._image.src=t.link,this._image.alt=t.name,this._description.textContent=t.name,super.open()}}(u.previewModal),_=new s((function(t){t.preventDefault();const e=_.formValues,{title:i,link:s}=e;console.log(i),I.uploadCard({name:i,link:s}).then((t=>{const e=k(t);v.addItem(e)})).then((t=>{_.close()})).then((t=>{_.resetForm(),_.removeProcessingMessage("Create"),C["add-card-form"].resetValidation()}))}),u.addCardForm,u.addCardButton),p=new s((function(t){t.preventDefault();const{link:e}=p.formValues;B.changeUserAvatar(e).then((t=>{a.src=e,p.close(),p.removeProcessingMessage("Save"),C["edit-avatar-form"].resetValidation()}))}),u.editAvatarModal,u.avatarEditSubmitButton),v=new class{constructor(t,e){this._renderer=t,this._classContainer=document.querySelector(e)}renderItems(t){t.forEach((t=>{this._element=this._renderer(t),this.addItem(this._element)}))}addItem(t){this._classContainer.prepend(t)}addItemsFromServer(t){this._classContainer.append(t)}removeItem(t){let{element:e}=t;this._classContainer.remove(e)}}(k,u.cardSection),f=new s((function(t){t.preventDefault();const e=f.formValues,{name:i,description:s}=e;B.changeUserInfo({name:i,about:s}).then((t=>{g({name:t.name,description:t.about})})).then((t=>{f.close()})).then((t=>{C["profile-edit-form"].resetValidation(),f.removeProcessingMessage("Save"),f.resetForm()}))}),u.profileEditForm,u.profileEditButton),E=new class extends i{constructor(t,e){super(t,e),this._confirmButton=document.querySelector(e)}open(){super.open()}setEventListeners(t){super.setEventListeners(),this._confirmButton.addEventListener("click",(e=>{e.preventDefault(),this._handleExecute(),this.setProcessingMessage(t),this.close()}))}setSubmitAction(t){this._handleExecute=t}}(u.deleteCardModal,u.deleteCardButton),C={};function g(t){let{name:e,description:i}=t;h.setUserInfo({name:e,description:i})}function k(e){return new t({data:e,handleImageClick:S},"#cards-template",L,b,y).generateCard()}function L(t,e){E.open(),E.setSubmitAction((()=>{!function(t,e){I.deleteCard(t).then((t=>{e.remove(),e=null,E.removeProcessingMessage("Yes")}))}(t,e)}))}function S(t){m.open(t)}function b(t){I.cardLike(t)}function y(t){I.cardUnlike(t)}(t=>{Array.from(document.querySelectorAll(t.formsSelector)).forEach((t=>{const i=new e(c,t),s=t.getAttribute("name");C[s]=i,i.enableValidation()}))})(u),f.setEventListeners(l),_.setEventListeners(l),m.setEventListeners(),E.setEventListeners(l),h.setEventListeners(),p.setEventListeners(l),n.addEventListener("click",(()=>{f.open(),function(t,e){const i=document.querySelector(t),s=document.querySelector(e),{description:r,name:n}=h.getUserInfo();i.value=n.trim(),s.value=r.trim()}(u.editFormTitle,u.editFormDetails)})),o.addEventListener("click",(()=>{_.open()})),d.addEventListener("click",(()=>{p.open()}));const B=new r;B.getUserInfo().then((t=>{g({name:t.name,description:t.about}),a.src=t.avatar}));const I=new r;I.fetchCards().then((t=>{t.forEach((t=>{const{name:e,link:i,_id:s,isLiked:r}=t,n=k({name:e,link:i,_id:s,isLiked:r});v.addItemsFromServer(n)}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,